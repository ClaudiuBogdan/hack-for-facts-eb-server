# Get UAT aggregated metrics with filtering and sorting
query GetUATAggregatedMetrics {
  uatAggregatedMetrics(
    filter: {
      reporting_year: 2023
      reporting_period: "Annual"
      county_code: "SB" # Sibiu county
    }
    sortBy: [
      { metric: "total_expense", direction: DESC }
      { metric: "budget_balance", direction: ASC }
    ]
    limit: 20
  ) {
    nodes {
      uat_id
      uat_code
      uat_name
      county_name
      uat_region
      uat_population
      total_income
      total_expense
      budget_balance
      per_capita_income
      per_capita_expense
    }
    pageInfo {
      totalCount
      hasNextPage
      hasPreviousPage
    }
  }
}

# Get UAT aggregated metrics with year array filtering
query GetUATMetricsMultiYear {
  uatAggregatedMetrics(
    filter: {
      reporting_years: [2021, 2022, 2023]
      reporting_period: "Q4"
      regions: ["Nord-Vest", "Centru"]
      min_population: 10000
    }
    sortBy: [
      { metric: "reporting_year", direction: DESC }
      { metric: "per_capita_expense", direction: DESC }
    ]
    limit: 30
  ) {
    nodes {
      reporting_year
      reporting_period
      uat_name
      county_name
      uat_region
      uat_population
      total_income
      total_expense
      budget_balance
      per_capita_income
      per_capita_expense
      # Access the related UAT data
      uat {
        id
        name
        region
        population
      }
    }
    pageInfo {
      totalCount
    }
  }
}

# Get a specific UAT's metrics and explore the relation back to the UAT
query GetSingleUATMetrics {
  uatAggregatedMetrics(filter: { uat_id: 123, reporting_year: 2023 }) {
    nodes {
      uat_id
      uat_name
      reporting_year
      reporting_period
      total_income
      total_expense
      budget_balance
      per_capita_income
      per_capita_expense
      uat {
        id
        uat_key
        uat_code
        name
        county_code
        county_name
        region
        population
        last_updated
      }
    }
  }
}
